#! /usr/bin/env python
'''Deployment script for node in deepi-array

'''

import logging, sys
from datetime import datetime
from pathlib import Path

from deepi import load_camera
# from deepi import load_config
#from deepi import make_recorder, make_socket_streamer
from deepi import VideoRecorder, SocketStreamer
from deepi import RecorderThread
from deepi import DEEPiConfig
# from deepi import SocketStreamingThread

# Config
logpath = Path("/home/pi/log/")
loglevel = logging.DEBUG
logpath.mkdir(parents=True, exist_ok=True)
log_file  = (logpath / datetime.utcnow().strftime('%Y%m%dT%H%M%S')).with_suffix('.txt')

logging.root.handlers = []
logging.basicConfig(format="%(asctime)s [%(levelname)s] %(message)s",
                    level=loglevel,
                    handlers=[logging.FileHandler(log_file),
                              logging.StreamHandler(sys.stdout)
                              ]
                    )

logging.debug("Reading config file")
config = DEEPiConfig()


# Make sure other folders exist
for sec in ['STILLCAM', 'RECORDER', 'TIMELAPSE']:
    save_path  = Path(config.get(sec, 'outpath'))
    logging.debug(f"Ensuring directory exists: {save_path}")
    save_path.mkdir(parents=True, exist_ok=True)


# Set up camera
logging.info('Initializing camera')
picam = load_camera(config)

logging.info("Set up recorder thread")
recorder = VideoRecorder(picam, splitter_port=1, 
                         outpath=config.get('RECORDER','outpath'))
recorder_thread = RecorderThread(recorder, 
                                 interval=config.getint('RECORDER','split'))

if config.getboolean('RECORDER','autostart'):
    logging.info("Starting recording")
    recorder_thread.start()

logging.info("Set up socket streaming thread")
# socket_streaming_thread = SocketStreamingThread(picam, port=8000, splitter_port=2)

logging.info("All set, it should be a never ending loop now.")
